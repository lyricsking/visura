{
  "version": 3,
  "sources": ["../../src/server/tips.server.ts"],
  "sourcesContent": ["import { Types } from \"mongoose\";\r\nimport TipsModel, { HydratedTips } from \"../models/tips.model\";\r\nimport { DBReponse } from \"~/shared/utils/mongoose\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { ITips } from \"../types/tips.type\";\r\n\r\nexport const createTip = async (data: ITips): Promise<HydratedTips> => {\r\n  try {\r\n    const tips = await TipsModel.create(data);\r\n\r\n    return tips;\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const findOneById = async (): Promise<HydratedTips[]> => {\r\n  try {\r\n    const tips = await TipsModel.find().exec();\r\n\r\n    return tips;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const findTips = async (): Promise<HydratedTips[]> => {\r\n  try {\r\n    const tips = await TipsModel.find().exec();\r\n\r\n    return tips;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const findTipBySlug = async ({\r\n  slug,\r\n}: any): Promise<DBReponse<ITips>> => {\r\n  let response: DBReponse<ITips> = {};\r\n  try {\r\n    response.data = await TipsModel.findOne({ slug }).exec();\r\n    //response.data = generateTips()[0];\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper to generate random ObjectId\r\nconst generateObjectId = () => new Types.ObjectId();\r\n\r\n// Generator function for ITips\r\nexport async function generateTips(length: number = 1) {\r\n  const tip = (): ITips => ({\r\n    _id: generateObjectId(),\r\n    slug: faker.lorem.slug(),\r\n    teamA: faker.company.name(),\r\n    teamB: faker.company.name(),\r\n    matchDate: faker.date.future(),\r\n    leagueCountry: generateObjectId(),\r\n    league: generateObjectId(),\r\n    teamARank: faker.number.int({ min: 1, max: 20 }),\r\n    teamBRank: faker.number.int({ min: 1, max: 20 }),\r\n    author: generateObjectId(),\r\n    prediction: {\r\n      outcome: {\r\n        value: faker.helpers.arrayElement([\"win\", \"draw\", \"loss\"]),\r\n        reason: faker.lorem.sentence(),\r\n      },\r\n      scoreline: {\r\n        value: `${faker.number.int({\r\n          min: 0,\r\n          max: 5,\r\n        })}-${faker.number.int({\r\n          min: 0,\r\n          max: 5,\r\n        })}`,\r\n        reason: faker.lorem.sentence(),\r\n      },\r\n    },\r\n    introduction: faker.lorem.paragraph(),\r\n    excerpt: faker.lorem.sentence(),\r\n    featuredImage: faker.image.url(),\r\n    tags: faker.helpers.arrayElements(\r\n      [\"football\", \"sports\", \"prediction\", \"league\", \"analysis\"],\r\n      faker.number.int({ min: 1, max: 5 })\r\n    ),\r\n    publishedOn: faker.date.past(),\r\n  });\r\n\r\n  const tips: ITips[] = [];\r\n  for (let index = 0; index < length; index++) {\r\n    //tips.push(tip());\r\n    await createTip(tip());\r\n  }\r\n\r\n  //return tips;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsB;AACtB,kBAAwC;AAExC,mBAAsB;AAGf,MAAM,YAAY,OAAO,SAAuC;AACrE,MAAI;AACF,UAAM,OAAO,MAAM,YAAAA,QAAU,OAAO,IAAI;AAExC,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,IAAI,KAAK;AAEjB,UAAM;AAAA,EACR;AACF;AAEO,MAAM,cAAc,YAAqC;AAC9D,MAAI;AACF,UAAM,OAAO,MAAM,YAAAA,QAAU,KAAK,EAAE,KAAK;AAEzC,WAAO;AAAA,EACT,SAAS,OAAO;AACd,UAAM;AAAA,EACR;AACF;AAEO,MAAM,WAAW,YAAqC;AAC3D,MAAI;AACF,UAAM,OAAO,MAAM,YAAAA,QAAU,KAAK,EAAE,KAAK;AAEzC,WAAO;AAAA,EACT,SAAS,OAAO;AACd,UAAM;AAAA,EACR;AACF;AAEO,MAAM,gBAAgB,OAAO;AAAA,EAClC;AACF,MAAsC;AACpC,MAAI,WAA6B,CAAC;AAClC,MAAI;AACF,aAAS,OAAO,MAAM,YAAAA,QAAU,QAAQ,EAAE,KAAK,CAAC,EAAE,KAAK;AAEvD,WAAO;AAAA,EACT,SAAS,OAAO;AACd,UAAM;AAAA,EACR;AACF;AAGA,MAAM,mBAAmB,MAAM,IAAI,sBAAM,SAAS;AAGlD,eAAsB,aAAa,SAAiB,GAAG;AACrD,QAAM,MAAM,OAAc;AAAA,IACxB,KAAK,iBAAiB;AAAA,IACtB,MAAM,mBAAM,MAAM,KAAK;AAAA,IACvB,OAAO,mBAAM,QAAQ,KAAK;AAAA,IAC1B,OAAO,mBAAM,QAAQ,KAAK;AAAA,IAC1B,WAAW,mBAAM,KAAK,OAAO;AAAA,IAC7B,eAAe,iBAAiB;AAAA,IAChC,QAAQ,iBAAiB;AAAA,IACzB,WAAW,mBAAM,OAAO,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG,CAAC;AAAA,IAC/C,WAAW,mBAAM,OAAO,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG,CAAC;AAAA,IAC/C,QAAQ,iBAAiB;AAAA,IACzB,YAAY;AAAA,MACV,SAAS;AAAA,QACP,OAAO,mBAAM,QAAQ,aAAa,CAAC,OAAO,QAAQ,MAAM,CAAC;AAAA,QACzD,QAAQ,mBAAM,MAAM,SAAS;AAAA,MAC/B;AAAA,MACA,WAAW;AAAA,QACT,OAAO,GAAG,mBAAM,OAAO,IAAI;AAAA,UACzB,KAAK;AAAA,UACL,KAAK;AAAA,QACP,CAAC,CAAC,IAAI,mBAAM,OAAO,IAAI;AAAA,UACrB,KAAK;AAAA,UACL,KAAK;AAAA,QACP,CAAC,CAAC;AAAA,QACF,QAAQ,mBAAM,MAAM,SAAS;AAAA,MAC/B;AAAA,IACF;AAAA,IACA,cAAc,mBAAM,MAAM,UAAU;AAAA,IACpC,SAAS,mBAAM,MAAM,SAAS;AAAA,IAC9B,eAAe,mBAAM,MAAM,IAAI;AAAA,IAC/B,MAAM,mBAAM,QAAQ;AAAA,MAClB,CAAC,YAAY,UAAU,cAAc,UAAU,UAAU;AAAA,MACzD,mBAAM,OAAO,IAAI,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC;AAAA,IACrC;AAAA,IACA,aAAa,mBAAM,KAAK,KAAK;AAAA,EAC/B;AAEA,QAAM,OAAgB,CAAC;AACvB,WAAS,QAAQ,GAAG,QAAQ,QAAQ,SAAS;AAE3C,UAAM,UAAU,IAAI,CAAC;AAAA,EACvB;AAGF;",
  "names": ["TipsModel"]
}
